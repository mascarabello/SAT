

--- MUNICIPIOS POBRE

-- Incluir dados [GDAL]
-- ogr2ogr -f PostgreSQL "PG:host=34.71.4.88 user=postgres dbname=malha_fundiaria port=5433 password=gpp-es@lq" /Users/marlucescarabello/Documents/GitHub/SAT/sat_classificacaoporaf.csv 
-- ogr2ogr -f PostgreSQL "PG:host=34.71.4.88 user=postgres dbname=malha_fundiaria port=5433 password=gpp-es@lq" /Users/marlucescarabello/Documents/GitHub/SAT/sat_classificacaoporarea3cat.csv 
-- ogr2ogr -f PostgreSQL "PG:host=34.71.4.88 user=postgres dbname=malha_fundiaria port=5433 password=gpp-es@lq" /Users/marlucescarabello/Documents/GitHub/SAT/sat_classificacaoporarea6cat.csv 
-- ogr2ogr -f PostgreSQL "PG:host=34.71.4.88 user=postgres dbname=malha_fundiaria port=5433 password=gpp-es@lq" /Users/marlucescarabello/Documents/GitHub/SAT/sat_classificacaopormf.csv 


-- AF-----
select * from public.sat_classificacaoporaf
-- Filtrando a tabela de af
DROP TABLE IF EXISTS public.sat_af_munipobres;
CREATE TABLE public.sat_af_munipobres AS 
SELECT 
cast(cod as int) as cd_mun,
cast(categoria as text) as categoria,
sum(areadosestabelecimentos::float8) as area_estab
FROM public.sat_classificacaoporaf
GROUP BY cd_mun, categoria

--- Calculando percentual de area 'pobre'
ALTER TABLE public.sat_af_munipobres ADD COLUMN percpobre float8;
UPDATE public.sat_af_munipobres as t
 SET percpobre = a.area_pobre/b.area_mun 
 FROM (
	 SELECT cd_mun, sum(area_estab) as area_mun 
	 FROM public.sat_af_munipobres 
	 GROUP BY cd_mun) AS b
   INNER JOIN ( SELECT cd_mun, sum(area_estab) as area_pobre 
	 FROM public.sat_af_munipobres 
	 WHERE categoria in ('pobre_cb','pobre_sb')
	 GROUP BY cd_mun
 ) AS a ON a.cd_mun=b.cd_mun
WHERE t.cd_mun=b.cd_mun
order by T.cd_mun

--- Identificando municipios 'pobres'
ALTER TABLE public.sat_af_munipobres ADD COLUMN is_pobre int;
UPDATE public.sat_af_munipobres SET is_pobre = 
 CASE
 WHEN percpobre > 0.50 THEN 1
 ELSE 0
 END

select cd_mun, 'pobre_af' as classe from public.sat_af_munipobres WHERE is_pobre = 1


-- MF-----
select * from public.sat_classificacaopormf
-- Filtrando a tabela de Mf
DROP TABLE IF EXISTS public.sat_mf_munipobres;
CREATE TABLE public.sat_mf_munipobres AS 
SELECT 
cast(cod as int) as cd_mun,
cast(categoria as text) as categoria,
sum(areadosestabelecimentos::float8) as area_estab
FROM public.sat_classificacaopormf
GROUP BY cd_mun, categoria

--- Calculando percentual de area 'pobre'
ALTER TABLE public.sat_mf_munipobres ADD COLUMN percpobre float8;
UPDATE public.sat_mf_munipobres as t
 SET percpobre = a.area_pobre/b.area_mun 
 FROM (
	 SELECT cd_mun, sum(area_estab) as area_mun 
	 FROM public.sat_mf_munipobres 
	 GROUP BY cd_mun) AS b
   INNER JOIN ( SELECT cd_mun, sum(area_estab) as area_pobre 
	 FROM public.sat_mf_munipobres 
	 WHERE categoria in ('pobre_cb','pobre_sb')
	 GROUP BY cd_mun
 ) AS a ON a.cd_mun=b.cd_mun
WHERE t.cd_mun=b.cd_mun

--- Identificando municipios 'pobres'
ALTER TABLE public.sat_mf_munipobres ADD COLUMN is_pobre int;
UPDATE public.sat_mf_munipobres SET is_pobre = 
 CASE
 WHEN percpobre > 0.50 THEN 1
 ELSE 0
 END
 
select * from sat_mf_munipobres where cd_mun = 2917409

select cd_mun, 'pobre_mf' as classe from public.sat_mf_munipobres WHERE is_pobre = 1

-- 3cat-----
select * from public.sat_classificacaoporarea3cat
-- Filtrando a tabela de 3cat
DROP TABLE IF EXISTS public.sat_3cat_munipobres;
CREATE TABLE public.sat_3cat_munipobres AS 
SELECT 
cast(cod as int) as cd_mun,
cast(categoria as text) as categoria,
sum(areadosestabelecimentos::float8) as area_estab
FROM public.sat_classificacaoporarea3cat
GROUP BY cd_mun, categoria

--- Calculando percentual de area 'pobre'
ALTER TABLE public.sat_3cat_munipobres ADD COLUMN percpobre float8;
UPDATE public.sat_3cat_munipobres as t
 SET percpobre = a.area_pobre/b.area_mun 
 FROM (
	 SELECT cd_mun, sum(area_estab) as area_mun 
	 FROM public.sat_3cat_munipobres 
	 GROUP BY cd_mun) AS b
   INNER JOIN ( SELECT cd_mun, sum(area_estab) as area_pobre 
	 FROM public.sat_3cat_munipobres 
	 WHERE categoria in ('pobre_cb','pobre_sb')
	 GROUP BY cd_mun
 ) AS a ON a.cd_mun=b.cd_mun
WHERE t.cd_mun=b.cd_mun

--- Identificando municipios 'pobres'
ALTER TABLE public.sat_3cat_munipobres ADD COLUMN is_pobre int;
UPDATE public.sat_3cat_munipobres SET is_pobre = 
 CASE
 WHEN percpobre > 0.50 THEN 1
 ELSE 0
 END

select * from public.sat_3cat_munipobres
select cd_mun, 'pobre_3cat' as classe from public.sat_3cat_munipobres WHERE is_pobre = 1

-- 6cat-----
select * from public.sat_classificacaoporarea6cat
-- Filtrando a tabela de 6cat
DROP TABLE IF EXISTS public.sat_6cat_munipobres;
CREATE TABLE public.sat_6cat_munipobres AS 
SELECT 
cast(cod as int) as cd_mun,
cast(categoria as text) as categoria,
sum(areadosestabelecimentos::float8) as area_estab
FROM public.sat_classificacaoporarea6cat
GROUP BY cd_mun, categoria

--- Calculando percentual de area 'pobre'
ALTER TABLE public.sat_6cat_munipobres ADD COLUMN percpobre float8;
UPDATE public.sat_6cat_munipobres as t
 SET percpobre = a.area_pobre/b.area_mun 
 FROM (
	 SELECT cd_mun, sum(area_estab) as area_mun 
	 FROM public.sat_6cat_munipobres 
	 GROUP BY cd_mun) AS b
   INNER JOIN ( SELECT cd_mun, sum(area_estab) as area_pobre 
	 FROM public.sat_6cat_munipobres 
	 WHERE categoria in ('pobre_cb','pobre_sb')
	 GROUP BY cd_mun
 ) AS a ON a.cd_mun=b.cd_mun
WHERE t.cd_mun=b.cd_mun

--- Identificando municipios 'pobres'
ALTER TABLE public.sat_6cat_munipobres ADD COLUMN is_pobre int;
UPDATE public.sat_6cat_munipobres SET is_pobre = 
 CASE
 WHEN percpobre > 0.50 THEN 1
 ELSE 0
 END

select * from public.sat_6cat_munipobres


select cd_mun, 'pobre_6cat' as classe from public.sat_6cat_munipobres WHERE is_pobre = 1